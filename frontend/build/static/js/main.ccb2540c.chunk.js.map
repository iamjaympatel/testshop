{"version":3,"sources":["../node_modules/validatorjs/src/lang sync /^/.*$","constants/productConstants.js","reducers/productReducers.js","reducers/userReducers.js","reducers/orderReducers.js","constants/brandConstatnt.js","reducers/brandReducer.js","constants/categoryConstant.js","reducers/categoryReducer.js","reducers/filterReducer.js","store.js","reducers/cartReducers.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","utils/error.js","utils/validation.js","actions/categoryAction.js","actions/brandAction.js","components/Drawer.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/Customer/Home2.js","components/Brand.js","screens/Customer/Brandscreen.js","screens/Customer/Brandproduct.js","actions/cartActions.js","screens/Customer/ProductScreen.js","screens/Customer/CartScreen.js","components/FormContainer.js","screens/Auth/LoginScreen.js","screens/Auth/RegisterScreen.js","actions/orderActions.js","screens/Auth/ProfileScreen.js","components/CheckoutSteps.js","screens/Customer/ShippingScreen.js","screens/Customer/PaymentScreen.js","screens/Customer/PlaceOrderScreen.js","screens/Customer/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/Product/ProductListScreen.js","screens/Product/ProductEditScreen.js","screens/Product/ProductAddScreen.js","screens/OrderListScreen.js","screens/Brand/BrandAddScreen.js","screens/Brand/BrandEditScreen.js","screens/Brand/BrandList.js","screens/Category/CategoryLIstScreen.js","screens/Category/CategoryAddScreen.js","screens/Category/CategoryEditScreen.js","components/Category.js","screens/Customer/Categoryscreen.js","screens/Customer/CategoryProduct.js","components/Routes/AdminRoute.js","components/Routes/SellerRoute.js","screens/Order/Orderadmin.js","screens/Order/Orderseller.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","PRODUCT_FAIL","initialstate","products","product","reviews","error","loading","success","pages","page","sellerproducts","selectedProducts","topproducts","initialState","userInfo","users","user","myOrders","Listorder","order","orderItems","shippingAddress","RESET_BRAND","ADD_BRAND","brands","storeBrands","brand","name","description","brandReducer","state","action","type","payload","editFormErrors","sucess","index","findIndex","b","_id","slice","selectedBrands","formErrors","RESET_CATEGORY","ADD_CATEGORY","categories","category","categoryReducer","categoryFormData","price","sort","modalopen","filterReducer","c","JSON","parse","stringify","include","find","filter","push","binclude","reducer","combineReducers","productList","cart","newstate","cartItems","cartId","localStorage","setItem","x","paymentMethod","userLogin","userUpdateProfile","userList","orderDetails","userInfoFromStorage","getItem","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","preventDefault","trim","inline","Control","onChange","target","value","placeholder","className","Button","variant","logout","dispatch","removeItem","document","location","href","getUserDetails","getState","a","config","headers","Authorization","token","axios","get","data","message","response","handleError","err","title","unsuccessfulOptions","position","autoDismiss","status","allFieldsValidation","rules","options","validation","Validator","validationResponse","isValid","passes","errors","all","fetchCategories","fetchStoreBrands","fetchBrands","Drawer2","classes","useStyles","theme","useTheme","React","setOpen","useDispatch","useSelector","selectedcategory","selectedbrand","setValue","useEffect","length","root","button","CssBaseline","Drawer","drawer","anchor","open","paper","drawerPaper","drawerHeader","IconButton","onClick","direction","Divider","ListGroup","Item","Typography","gutterBottom","Slider","defaultValue","min","max","event","newValue","valueLabelDisplay","aria-labelledby","FormLabel","component","style","key","FormControlLabel","control","Checkbox","checked","includes","label","clsx","content","contentShift","makeStyles","display","marginLeft","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","menuButton","marginRight","spacing","marginTop","hide","flexShrink","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","formControl","margin","minWidth","maxWidth","height","Header","Navbar","bg","expand","collapseOnSelect","Container","aria-label","edge","color","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","isAdmin","seller","Footer","Row","Col","Rating","text","defaultProps","Product","props","Card","Img","src","image","Body","Title","as","Text","rating","numReviews","userLocation","Message","children","Alert","Loader","Spinner","animation","role","Paginate","Pagination","Array","active","listProducts","pageNumber","listProductDetails","selectProducts","ProductCarousel","productTopRated","Carousel","pause","Image","alt","fluid","Caption","Meta","keywords","Helmet","HomeScreen","match","params","personName","setPersonName","handleChange","console","log","filteredproduct","priceproduct","p","selectedcat","catfilteredproduct","localeCompare","Dropdown","Menu","n","RadioGroup","Radio","sm","md","lg","xl","slug","BrandScreen","Brandproduct","brandproduct","addToCart","qty","post","getCartItem","put","getCartId","setCartId","ProductScreen","setQty","setRating","comment","setComment","productReviewCreate","successProductReview","loadingProductReview","errorProductReview","countInStock","disabled","review","createdAt","substring","productId","Group","controlId","Label","row","CartScreen","removeFromCartHandler","delete","removeFromCart","item","rounded","Number","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","search","split","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","setSeller","userRegister","register","column","Check","getOrderDetails","payOrder","orderId","paymentResult","deliverOrder","ProfileScreen","userDetails","orderListMy","loadingOrders","errorOrders","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","orderCreate","createOrder","OrderScreen","sdkReady","setSdkReady","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","UserListScreen","successDelete","deleteHandler","confirm","deleteUser","UserEditScreen","userId","setIsAdmin","userUpdate","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","productListseller","listProductsAdmin","listProductsseller","deleteProduct","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","setUserLocation","productDetails","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","pro","cat","ProductAddScreen","productUpdate","fetch","then","json","createProduct","OrderListScreen","orderList","BrandAddScreen","successfulOptions","useHistory","BrandEditScreen","brandId","setProducts","oldproducts","forEach","fetchBrand","newBrand","goBack","updateBrand","BrandListScreen","brandselect","deleteBrand","pr","CategoryListScreen","categorySelect","deleteCategory","CategoryAddScreen","ProductSelect","productforselect","error1","selectoption","array","Category","isMulti","CategoryEditScreen","categoryId","CategoryScreen","CategoryProduct","categoryproduct","AdminRoute","Component","rest","pathname","from","SellerRoute","OrderScreenAdmin","OrderScreenSeller","App","path","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ccb2540c.chunk.js","sourcesContent":["var map = {\n\t\"./ar\": 123,\n\t\"./ar.js\": 123,\n\t\"./az\": 124,\n\t\"./az.js\": 124,\n\t\"./be\": 125,\n\t\"./be.js\": 125,\n\t\"./bg\": 126,\n\t\"./bg.js\": 126,\n\t\"./bs\": 127,\n\t\"./bs.js\": 127,\n\t\"./ca\": 128,\n\t\"./ca.js\": 128,\n\t\"./cs\": 129,\n\t\"./cs.js\": 129,\n\t\"./cy\": 130,\n\t\"./cy.js\": 130,\n\t\"./da\": 131,\n\t\"./da.js\": 131,\n\t\"./de\": 132,\n\t\"./de.js\": 132,\n\t\"./el\": 133,\n\t\"./el.js\": 133,\n\t\"./en\": 100,\n\t\"./en.js\": 100,\n\t\"./es\": 134,\n\t\"./es.js\": 134,\n\t\"./et\": 135,\n\t\"./et.js\": 135,\n\t\"./eu\": 136,\n\t\"./eu.js\": 136,\n\t\"./fa\": 137,\n\t\"./fa.js\": 137,\n\t\"./fi\": 138,\n\t\"./fi.js\": 138,\n\t\"./fr\": 139,\n\t\"./fr.js\": 139,\n\t\"./hr\": 140,\n\t\"./hr.js\": 140,\n\t\"./hu\": 141,\n\t\"./hu.js\": 141,\n\t\"./id\": 142,\n\t\"./id.js\": 142,\n\t\"./it\": 143,\n\t\"./it.js\": 143,\n\t\"./ja\": 144,\n\t\"./ja.js\": 144,\n\t\"./ka\": 145,\n\t\"./ka.js\": 145,\n\t\"./ko\": 146,\n\t\"./ko.js\": 146,\n\t\"./lt\": 147,\n\t\"./lt.js\": 147,\n\t\"./lv\": 148,\n\t\"./lv.js\": 148,\n\t\"./mk\": 149,\n\t\"./mk.js\": 149,\n\t\"./mn\": 150,\n\t\"./mn.js\": 150,\n\t\"./ms\": 151,\n\t\"./ms.js\": 151,\n\t\"./nb_NO\": 152,\n\t\"./nb_NO.js\": 152,\n\t\"./nl\": 153,\n\t\"./nl.js\": 153,\n\t\"./pl\": 154,\n\t\"./pl.js\": 154,\n\t\"./pt\": 155,\n\t\"./pt.js\": 155,\n\t\"./pt_BR\": 156,\n\t\"./pt_BR.js\": 156,\n\t\"./ro\": 157,\n\t\"./ro.js\": 157,\n\t\"./ru\": 158,\n\t\"./ru.js\": 158,\n\t\"./se\": 159,\n\t\"./se.js\": 159,\n\t\"./sl\": 160,\n\t\"./sl.js\": 160,\n\t\"./sq\": 161,\n\t\"./sq.js\": 161,\n\t\"./sr\": 162,\n\t\"./sr.js\": 162,\n\t\"./sv\": 163,\n\t\"./sv.js\": 163,\n\t\"./tr\": 164,\n\t\"./tr.js\": 164,\n\t\"./ua\": 165,\n\t\"./ua.js\": 165,\n\t\"./uk\": 166,\n\t\"./uk.js\": 166,\n\t\"./vi\": 167,\n\t\"./vi.js\": 167,\n\t\"./zh\": 168,\n\t\"./zh.js\": 168,\n\t\"./zh_TW\": 169,\n\t\"./zh_TW.js\": 169\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 241;","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\nexport const PRODUCT_SELECT_REQUEST = 'PRODUCT_SELECT_REQUEST'\r\nexport const PRODUCT_SELECT_SUCCESS = 'PRODUCT_SELECT_SUCCESS'\r\nexport const PRODUCT_SELECT_FAIL = 'PRODUCT_SELECT_FAIL'\r\nexport const PRODUCT_SELECTED = 'PRODUCT_SELECTED'\r\n\r\nexport const PRODUCTSELLER_LIST_REQUEST='PRODUCTSELLER_LIST_REQUEST'\r\nexport const PRODUCTSELLER_LIST_FAIL='PRODUCTSELLER_LIST_FAIL'\r\nexport const PRODUCTSELLER_LIST_SUCCESS='PRODUCTSELLER_LIST_SUCCESS'\r\n\r\n\r\nexport const PRODUCT_REQUEST='PRODUCT_REQUEST'\r\nexport const PRODUCT_FAIL='PRODUCT_FAIL'","import {\r\n  PRODUCT_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DELETE_SUCCESS,\r\n PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_SELECT_SUCCESS,\r\n  PRODUCT_SELECTED, \r\n  PRODUCTSELLER_LIST_SUCCESS,\r\n  PRODUCT_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n} from '../constants/productConstants'\r\n\r\n\r\nconst initialstate={\r\n  products:[],\r\n  product:{reviews: []},\r\n  error:'',\r\n  loading:false,\r\n  success:false,\r\n  pages:'',\r\n  page:'',\r\n  sellerproducts:[],\r\n  selectedProducts:[],\r\n  topproducts:[]\r\n}\r\n\r\nexport const productListReducer = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n\r\n    \r\n    case PRODUCT_REQUEST:\r\n      return {...state, loading: true,error:null }\r\n    case PRODUCT_FAIL:\r\n      return {...state, loading: false, error: action.payload }\r\n\r\n      //List product\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {...state,\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      }\r\n      \r\n      //product detail by id\r\n      case PRODUCT_DETAILS_SUCCESS:\r\n        return {...state, loading: false, product: action.payload }\r\n      \r\n     //seller product\r\n  \r\n    case PRODUCTSELLER_LIST_SUCCESS:\r\n      return {...state,\r\n        loading: false,\r\n        sellerproducts: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      }\r\n   \r\n  //product delete \r\n      case PRODUCT_DELETE_SUCCESS:\r\n        return {...state, loading: false, success: true }\r\n\r\n// create product \r\n       case PRODUCT_CREATE_SUCCESS:\r\n      return {...state, loading: false, success: true }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {...state,success:false}\r\n\r\n//update product\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return {...state, loading: false, success: true, product: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return {...state,success:false }\r\n\r\n      //select product\r\n      case PRODUCT_SELECT_SUCCESS:\r\n        return {...state, loading: false, products: action.payload }\r\n      case PRODUCT_SELECTED:\r\n        return {\r\n           ...state,\r\n             selectedProducts: action.payload\r\n              };\r\n      //top product\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return {...state, loading: false, topproducts: action.payload }\r\n\r\n      //product review \r\n      case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n        return {...state, loading: false, success: true }\r\n      case PRODUCT_CREATE_REVIEW_RESET:\r\n        return {...state,success:false}\r\n   default:\r\n      return state\r\n  }\r\n}\r\n\r\n","import { StarRate } from '@material-ui/icons'\r\nimport { \r\n   USER_FAIL,\r\n  USER_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DELETE_SUCCESS,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_PROFILE_RESET,\r\n} from '../constants/userConstants'\r\n\r\n\r\nconst initialState={\r\n  loading:false,\r\n  error:'',\r\n  userInfo:{},\r\n  users:[],\r\n  user:{}\r\n}\r\n\r\nexport const userLoginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USER_REQUEST:\r\n      return {...state, loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return {...state, loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_SUCCESS:\r\n      return {...state, loading: false, userInfo: action.payload }\r\n    case USER_DETAILS_SUCCESS:\r\n      return {...state, loading: false, user: action.payload }\r\n    case USER_DETAILS_RESET:\r\n        return {...state, user: {} }\r\n\r\n    case USER_LIST_SUCCESS:\r\n        return {...state, loading: false, users: action.payload }\r\n    case USER_LIST_RESET:\r\n        return { users: [] }\r\n\r\n    case USER_DELETE_SUCCESS:\r\n      return {...state, loading: false, success: true }\r\n    \r\n    case USER_UPDATE_SUCCESS:\r\n      return {...state, loading: false, success: true }\r\n\r\n    case USER_FAIL:\r\n      return {...state, loading: false, error: action.payload }\r\n\r\n    case USER_LOGOUT:\r\n      return {...state, userInfo:{},user:{},users:[]}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n","import {\r\n  ORDER_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_CREATE_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nconst initialstate={\r\n  loading:false,\r\n  success:true,\r\n  error:'',\r\n  myOrders:[],  \r\n  Listorder:[],\r\n  order:{},\r\n  orderItems: [], shippingAddress: {}\r\n}\r\n\r\nexport const orderCreateReducer = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case ORDER_REQUEST:\r\n      return {...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {...state,\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_FAIL:\r\n      return {...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_CREATE_RESET:\r\n      return {...state,success:false}\r\n\r\n//order detail  \r\n     \r\n      case ORDER_DETAILS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          order: action.payload,\r\n        }\r\n        \r\n  //all order list for seller and admin\r\n        \r\n    case ORDER_LIST_SUCCESS:\r\n      return {...state,\r\n        loading: false,\r\n        Listorder: action.payload,\r\n      }\r\n      //my order in profile\r\n      case ORDER_LIST_MY_SUCCESS:\r\n        return {...state,\r\n          loading: false,\r\n          myOrders: action.payload,\r\n        }\r\n\r\n        //order delivery reducer\r\n        case ORDER_DELIVER_SUCCESS:\r\n          return {...state,\r\n            loading: false,\r\n            success: true,\r\n          }\r\n        case ORDER_DELIVER_RESET:\r\n          return {...state,success:false}\r\n\r\n          //order pay orderPayReducer\r\n  \r\n          case ORDER_PAY_SUCCESS:\r\n            return {...state,\r\n              loading: false,\r\n              success: true,\r\n            }\r\n          case ORDER_PAY_RESET:\r\n            return {...state,success:false}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/*\r\n *\r\n * Brand constants\r\n *\r\n */\r\n\r\nexport const FETCH_BRANDS = 'src/Brand/FETCH_BRANDS';\r\nexport const FETCH_STORE_BRANDS = 'src/Brand/FETCH_STORE_BRANDS';\r\nexport const FETCH_BRAND = 'src/Brand/FETCH_BRAND';\r\nexport const BRAND_CHANGE = 'src/Brand/BRAND_CHANGE';\r\nexport const BRAND_EDIT_CHANGE = 'src/Brand/BRAND_EDIT_CHANGE';\r\nexport const SET_BRAND_FORM_ERRORS = 'src/Brand/SET_BRAND_FORM_ERRORS';\r\nexport const SET_BRAND_FORM_EDIT_ERRORS =\r\n  'src/Brand/SET_BRAND_FORM_EDIT_ERRORS';\r\nexport const RESET_BRAND = 'src/Brand/RESET_BRAND';\r\nexport const ADD_BRAND = 'src/Brand/ADD_BRAND';\r\nexport const REMOVE_BRAND = 'src/Brand/REMOVE_BRAND';\r\nexport const BRAND_SELECT = 'src/Brand/BRAND_SELECT';\r\nexport const FETCH_BRANDS_SELECT = 'src/Brand/FETCH_BRANDS_SELECT';\r\n\r\nexport const FETCH_BRANDs_REQUEST='FETCH_BRANDs_REQUEST'","\r\n\r\n    // brandsSelect: [],\r\n    // selectedBrands: [],\r\n    // brandFormData: {\r\n    //   name: '',\r\n    //   description: ''\r\n    // },\r\n    // formErrors: {},\r\n    // editFormErrors: {},\r\n\r\nimport {\r\n    FETCH_BRANDS,\r\n    FETCH_STORE_BRANDS,\r\n    FETCH_BRAND,\r\n    RESET_BRAND,\r\n    ADD_BRAND,\r\n    REMOVE_BRAND,\r\n    FETCH_BRANDs_REQUEST\r\n  } from '../constants/brandConstatnt';\r\n \r\nconst initialState = {\r\n    brands: [],\r\n    storeBrands: [],\r\n    brand: {\r\n      name: '',\r\n      description: ''\r\n    },\r\n    loading:false,\r\n    success: false,\r\n  };\r\n  \r\n  const brandReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case FETCH_BRANDs_REQUEST:\r\n        return{\r\n          success: false,\r\n        ...state,loading:true\r\n        };\r\n      case FETCH_BRANDS:\r\n        return {\r\n          ...state,\r\n          brands: action.payload,\r\n          loading:false\r\n        };\r\n      case FETCH_STORE_BRANDS:\r\n        return {\r\n          ...state,\r\n          storeBrands: action.payload,\r\n          loading:false\r\n        };\r\n      case FETCH_BRAND:\r\n        return {\r\n          ...state,\r\n          brand: action.payload,\r\n          editFormErrors: {},\r\n          loading:false,\r\n          sucess:true\r\n        };\r\n     \r\n      case ADD_BRAND:\r\n        return {\r\n          ...state,\r\n          success: true,\r\n          brands: [...state.brands, action.payload],\r\n          loading:false\r\n        };\r\n      case REMOVE_BRAND:\r\n        const index = state.storeBrands.findIndex(b => b._id === action.payload);\r\n        return {\r\n          ...state,\r\n          storeBrands:[\r\n            ...state.storeBrands.slice(0,index),\r\n            ...state.storeBrands.slice(1+index),\r\n          ],\r\n          brands: [\r\n            ...state.brands.slice(0, index),\r\n            ...state.brands.slice(index + 1)\r\n          ],\r\n        success: true,\r\n\r\n          loading:false\r\n        };\r\n\r\n      case RESET_BRAND:\r\n        return {\r\n          ...state,\r\n          selectedBrands: [],\r\n          formErrors: {},\r\n          success: false\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default brandReducer;\r\n  \r\n  //selectedProducts: [],\r\n\r\n\r\n        // case BRAND_CHANGE:\r\n      //   return {\r\n      //     ...state,\r\n      //     brandFormData: {\r\n      //       ...state.brandFormData,\r\n      //       ...action.payload\r\n      //     }\r\n      //   };\r\n      // case FETCH_BRANDS_SELECT:\r\n      //   return {\r\n      //     ...state,\r\n      //     brandsSelect: action.payload\r\n      //   };\r\n      // case BRAND_SELECT:\r\n      //   return {\r\n      //     ...state,\r\n      //     selectedBrands: action.payload\r\n      //   };\r\n      // case BRAND_EDIT_CHANGE:\r\n      //   return {\r\n      //     ...state,\r\n      //     brand: {\r\n      //       ...state.brand,\r\n      //       ...action.payload\r\n      //     }\r\n      //   };\r\n      // case SET_BRAND_FORM_ERRORS:\r\n      //   return {\r\n      //     ...state,\r\n      //     formErrors: action.payload\r\n      //   };\r\n      // case SET_BRAND_FORM_EDIT_ERRORS:\r\n      //   return {\r\n      //     ...state,\r\n      //     editFormErrors: action.payload\r\n      //   };","\r\n\r\nexport const FETCH_CATEGORIES = 'src/Category/FETCH_CATEGORIES';\r\nexport const CATEGORY_CHANGE = 'src/Category/CATEGORY_CHANGE';\r\nexport const SET_CATEGORY_FORM_ERRORS = 'src/Category/SET_CATEGORY_FORM_ERRORS';\r\nexport const RESET_CATEGORY = 'src/Category/RESET_CATEGORY';\r\nexport const CATEGORY_SELECT = 'src/Category/CATEGORY_SELECT';\r\nexport const TOGGLE_ADD_CATEGORY = 'src/Category/TOGGLE_ADD_CATEGORY';\r\nexport const ADD_CATEGORY = 'src/Category/ADD_CATEGORY';\r\nexport const REMOVE_CATEGORY = 'src/Category/REMOVE_CATEGORY';\r\nexport const REQUEST_FAIL='REQUEST_FAIL'\r\nexport const FETCHING='FETCHING'\r\nexport const FETCH_CATEGORY='FETCH_CATEGORY'\r\nexport const UPDATE_CATEGORY='UPDATE_CATEGORY'","/*\r\n *\r\n * Category reducer\r\n *\r\n */\r\n\r\nimport {\r\n    FETCH_CATEGORIES,\r\n    CATEGORY_CHANGE,\r\n    SET_CATEGORY_FORM_ERRORS,\r\n    RESET_CATEGORY,\r\n    TOGGLE_ADD_CATEGORY,\r\n    ADD_CATEGORY,\r\n    REMOVE_CATEGORY,\r\n    REQUEST_FAIL,FETCHING,FETCH_CATEGORY,\r\n    UPDATE_CATEGORY\r\n  } from '../constants/categoryConstant';\r\n  \r\n  const initialState = {\r\n    categories: [],\r\n   category:{},\r\n   error:null,\r\n   success:false,\r\n   loading:false,\r\n   \r\n  };\r\n  \r\n  const categoryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCHING:\r\n        return {\r\n          ...state,loading:true,error:null, success:false,\r\n        }\r\n        case REQUEST_FAIL:\r\n            return{\r\n                ...state,loading:false,error:action.payload\r\n            }\r\n        \r\n      case FETCH_CATEGORIES:\r\n        return {\r\n          ...state,\r\n          categories: action.payload,\r\n          \r\n          loading:false,\r\n          error:null,\r\n        };\r\n        \r\n      case FETCH_CATEGORY:\r\n        return {\r\n          ...state,\r\n          category: action.payload,\r\n          loading:false,\r\n          error:null,\r\n        };\r\n      case ADD_CATEGORY:\r\n        return {\r\n          ...state,\r\n          categories: [...state.categories, action.payload],\r\n          success:true,\r\n          loading:false,\r\n          error:null,\r\n        };\r\n        \r\n      case UPDATE_CATEGORY:\r\n        return {\r\n          ...state,\r\n         // categories: [...state.categories, action.payload],\r\n          success:true,\r\n          loading:false,\r\n          error:null,\r\n        };\r\n      case REMOVE_CATEGORY:\r\n        const index = state.categories.findIndex(b => b._id === action.payload);\r\n        return {\r\n          ...state,\r\n          categories: [\r\n            ...state.categories.slice(0, index),\r\n            ...state.categories.slice(index + 1)\r\n          ],\r\n          success:true,\r\n          loading:false,\r\n          error:null,\r\n        };\r\n      case CATEGORY_CHANGE:\r\n        return {\r\n          ...state,\r\n          categoryFormData: { ...state.categoryFormData, ...action.payload }\r\n        };\r\n      case RESET_CATEGORY:\r\n        return {\r\n          ...state,  \r\n          success:false,\r\n          loading:false,\r\n          error:null,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default categoryReducer;\r\n  ","/*\r\n *\r\n * Category reducer\r\n *\r\n */\r\n\r\n  \r\n  const initialState = {\r\n    brands:[],\r\n    categories: [],\r\n   products:[],\r\n    price:1550,\r\n   sort:'',\r\n   modalopen:true\r\n  };\r\n  \r\n  const filterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case \"INITSELECTCATEGORY\":    \r\n      \r\n      return{ ...state ,categories:action.payload.map((c)=>{return c._id})}\r\n\r\n      case \"SELECTCATEGORY\":\r\n       \r\n     let categories=JSON.parse(JSON.stringify(state.categories));\r\n   const include=categories.find((e)=>e===action.payload)\r\n          if(include){\r\n              categories=categories.filter((e)=>e!==action.payload)\r\n            }else{\r\n                categories.push(action.payload) \r\n           }\r\n        return {\r\n          ...state,\r\n         categories:categories\r\n        };\r\n        \r\n        case \"INITSELECTBRAND\":    \r\n      \r\n        return{ ...state ,brands:action.payload.map((c)=>{return c._id})}\r\n  \r\n        case \"SELECTBRAND\":\r\n         \r\n       let brands=JSON.parse(JSON.stringify(state.brands));\r\n     const binclude=brands.find((e)=>e===action.payload)\r\n            if(binclude){\r\n                brands=brands.filter((e)=>e!==action.payload)\r\n              }else{\r\n                  brands.push(action.payload) \r\n             }\r\n       \r\n          return {\r\n            ...state,\r\n           brands:brands\r\n          };\r\n          \r\n      case \"SORTED\":\r\n        return {\r\n          ...state,\r\n          sort: action.payload,\r\n        };\r\n\r\n      case \"PRICERANGE\":\r\n        return {\r\n          ...state,\r\n        price:action.payload\r\n        };\r\n      case \"Toggle\":\r\n    return{\r\n      ...state,\r\n      modalopen:!state.modalopen\r\n    }\r\n      \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default filterReducer;\r\n  ","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n  productListReducer,\r\n // productDetailsReducer,\r\n  //productDeleteReducer,\r\n  //productCreateReducer,\r\n  //productUpdateReducer,\r\n \r\n \r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n  userLoginReducer,\r\n // userRegisterReducer,\r\n // userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  //userDeleteReducer,\r\n//  userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer\r\n  \r\n} from './reducers/orderReducers'\r\n\r\nimport brandReducer  from './reducers/brandReducer'\r\nimport categoryReducer  from './reducers/categoryReducer'\r\nimport filterReducer from './reducers/filterReducer'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n \r\n  cart: cartReducer,\r\n\r\n  userLogin: userLoginReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,  \r\n  \r\n  order: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  \r\n  \r\n  brand:brandReducer,\r\n  category:categoryReducer,\r\n  filter:filterReducer,\r\n \r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: [],\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n\r\n\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_CLEAR_ITEMS,\r\n  SET_CART_ID,\r\n  GET_CART_ITEM\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {},cartId:{} },\r\n  action\r\n) => {\r\n    \r\n     let newstate;\r\n  switch (action.type) {\r\n    \r\n      case SET_CART_ID:\r\n     \r\n       newstate={\r\n          ...state,\r\n         cartId:action.payload\r\n        }\r\n        localStorage.setItem('cart_id',newstate.cartId);\r\n        return newstate\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      }\r\n\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n      case GET_CART_ITEM:\r\n        return{\r\n          ...state,\r\n          cartItems:action.payload\r\n        }\r\n\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      }\r\n      \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\nexport const SET_CART_ID ='SET_CART_ID'\r\nexport const GET_CART_ITEM='GET_CART_ITEM'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n\r\n\r\n\r\nexport const USER_FAIL='USER_FAIL'\r\nexport const USER_REQUEST='USER_REQUEST'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n\r\nexport const ORDER_REQUEST = 'ORDER_REQUEST'\r\nexport const ORDER_FAIL = 'ORDER_FAIL'","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder='Search Products...'\r\n        className='mr-sm-2 ml-sm-5'\r\n      ></Form.Control>\r\n      <Button type='submit' variant='outline-success' className='p-2'>\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n  USER_REQUEST,\r\n  USER_FAIL,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type:   USER_REQUEST,\r\n      \r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  localStorage.removeItem('cartItems')\r\n  localStorage.removeItem('cart_id')\r\n  localStorage.removeItem('shippingAddress')\r\n  localStorage.removeItem('paymentMethod')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n  document.location.href = '/login'\r\n}\r\n\r\nexport const register = (name, email, password,seller,userLocation) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password,seller,userLocation },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n","/**\r\n *\r\n * error.js\r\n * This is a generic error handler, it receives the error returned from the server and present it on a pop up\r\n */\r\n\r\nimport { error } from 'react-notification-system-redux';\r\n\r\n//import { signOut } from '../containers/Login/actions';\r\n\r\n\r\nconst handleError = (err, dispatch, title = '') => {\r\n  const unsuccessfulOptions = {\r\n    title: `${title}`,\r\n    message: ``,\r\n    position: 'tr',\r\n    autoDismiss: 1\r\n  };\r\n\r\n  if (err.response) {\r\n    if (err.response.status === 400) {\r\n      unsuccessfulOptions.title = title ? title : 'Please Try Again!';\r\n      unsuccessfulOptions.message = err.response.data.error;\r\n      dispatch(error(unsuccessfulOptions));\r\n    } else if (err.response.status === 404) {\r\n      // unsuccessfulOptions.title =\r\n      //   err.response.data.message ||\r\n      //   'Your request could not be processed. Please try again.';\r\n      // dispatch(error(unsuccessfulOptions));\r\n    } else if (err.response.status === 401) {\r\n      unsuccessfulOptions.message = 'Unauthorized Access! Please login again';\r\n      //dispatch(signOut());\r\n      dispatch(error(unsuccessfulOptions));\r\n    } else if (err.response.status === 403) {\r\n      unsuccessfulOptions.message =\r\n        'Forbidden! You are not allowed to access this resource.';\r\n      dispatch(error(unsuccessfulOptions));\r\n    }\r\n  } else if (err.message) {\r\n    unsuccessfulOptions.message = err.message;\r\n    dispatch(error(unsuccessfulOptions));\r\n  } else {\r\n    // fallback\r\n    unsuccessfulOptions.message =\r\n      'Your request could not be processed. Please try again.';\r\n  }\r\n};\r\n\r\nexport default handleError;\r\n","import Validator from 'validatorjs';\r\n\r\nexport const allFieldsValidation = (data, rules, options) => {\r\n  const validation = new Validator(data, rules, options);\r\n  const validationResponse = { isValid: validation.passes() };\r\n  if (!validationResponse.isValid) {\r\n    validationResponse.errors = validation.errors.all();\r\n  }\r\n\r\n  return validationResponse;\r\n};\r\n","/*\r\n *\r\n * Category actions\r\n *\r\n */\r\n\r\nimport { success } from 'react-notification-system-redux';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  FETCH_CATEGORIES,\r\n  CATEGORY_CHANGE,\r\n  SET_CATEGORY_FORM_ERRORS,\r\n  RESET_CATEGORY,\r\n  TOGGLE_ADD_CATEGORY,\r\n  ADD_CATEGORY,\r\n  REMOVE_CATEGORY,\r\n  CATEGORY_SELECT,\r\n  REQUEST_FAIL,FETCHING,FETCH_CATEGORY,\r\n  UPDATE_CATEGORY\r\n} from '../constants/categoryConstant';\r\n\r\n\r\n\r\nimport handleError from '../utils/error';\r\n//import { unformatSelectOptions } from '../../helpers/select';\r\nimport { allFieldsValidation } from '../utils/validation';\r\n\r\nexport const categoryChange = (name, value) => {\r\n  let formData = {};\r\n  formData[name] = value;\r\n\r\n  return {\r\n    type: CATEGORY_CHANGE,\r\n    payload: formData\r\n  };\r\n};\r\n\r\nexport const toggleAddCategory = () => {\r\n  return {\r\n    type: TOGGLE_ADD_CATEGORY\r\n  };\r\n};\r\n\r\nexport const categorySelect = value => {\r\n  return {\r\n    type: CATEGORY_SELECT,\r\n    payload: value\r\n  };\r\n};\r\n\r\nexport const fetchCategories = () =>async (dispatch, getState) => {\r\n  dispatch({type:FETCHING})\r\n  try {\r\n      const response = await axios.get(`/api/category/list`);\r\n\r\n      dispatch({\r\n        type: FETCH_CATEGORIES,\r\n        payload: response.data.categories\r\n      });\r\n      //const categoryid=response.data.categories.map((m)=>{return m._id})\r\n    } catch (error) {\r\n      handleError(error, dispatch);\r\n      dispatch({type:REQUEST_FAIL,payload:error.message})\r\n    }\r\n  };\r\n\r\n\r\n  export const fetchCategory = (id) =>async (dispatch, getState) => {\r\n    dispatch({type:FETCHING})\r\n      try {\r\n        const response = await axios.get(`/api/category/${id}`);\r\n  \r\n        dispatch({\r\n          type: FETCH_CATEGORY,\r\n          payload: response.data.category\r\n        });\r\n      } catch (error) {\r\n        handleError(error, dispatch);\r\n        dispatch({type:REQUEST_FAIL,payload:error.message})\r\n      }\r\n    };\r\n  \r\n\r\nexport const deleteCategory = (id) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({type:FETCHING})\r\n\r\n    try {\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      const response = await axios.delete(`/api/category/delete/${id}`,config);\r\n\r\n      const successfulOptions = {\r\n        title: `${response.data.message}`,\r\n        position: 'tr',\r\n        autoDismiss: 1\r\n      };\r\n\r\n      if (response.data.success == true) {\r\n        dispatch(success(successfulOptions));\r\n        dispatch({\r\n          type: REMOVE_CATEGORY,\r\n          payload: id\r\n        });\r\n      }\r\n    } catch (error) {\r\n      handleError(error, dispatch);\r\n      dispatch({type:REQUEST_FAIL,payload:error})\r\n\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const addCategory = (Category) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({type:FETCHING})\r\n\r\n    try {\r\n   \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n     const response = await axios.post(`/api/category/add`, Category,config);\r\n\r\n      const successfulOptions = {\r\n        title: `${response.data.message}`,\r\n        position: 'tr',\r\n        autoDismiss: 1\r\n      };\r\n\r\n      if (response.data.success === true) {\r\n        dispatch(success(successfulOptions));\r\n        dispatch({\r\n          type: ADD_CATEGORY,\r\n          payload: response.data.category\r\n        });\r\n        dispatch({ type: RESET_CATEGORY });\r\n      }\r\n    } catch (error) {\r\n      handleError(error, dispatch);\r\n      dispatch({type:REQUEST_FAIL,payload:error.response.data.error})\r\n\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const updateCategory = (Category) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({type:FETCHING})\r\n\r\n    try {\r\n   \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n     const response = await axios.put(`/api/category/${Category._id}`, Category,config);\r\n\r\n      const successfulOptions = {\r\n        title: `${response.data.message}`,\r\n        position: 'tr',\r\n        autoDismiss: 1\r\n      };\r\n\r\n      if (response.data.success === true) {\r\n        dispatch(success(successfulOptions));\r\n        dispatch({\r\n          type: UPDATE_CATEGORY,\r\n          //payload: response.data.category\r\n        });\r\n        dispatch({ type: RESET_CATEGORY });\r\n      }\r\n    } catch (error) {\r\n      handleError(error, dispatch);\r\n      dispatch({type:REQUEST_FAIL,payload:error})\r\n    }\r\n  };\r\n};\r\n","/*\r\n *\r\n * Brand actions\r\n *\r\n */\r\n\r\nimport { goBack } from 'connected-react-router';\r\nimport {useHistory} from 'react-router-dom'\r\nimport { success } from 'react-notification-system-redux';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  FETCH_BRANDS,\r\n  FETCH_STORE_BRANDS,\r\n  FETCH_BRAND,\r\n  BRAND_CHANGE,\r\n  BRAND_EDIT_CHANGE,\r\n  SET_BRAND_FORM_ERRORS,\r\n  SET_BRAND_FORM_EDIT_ERRORS,\r\n  RESET_BRAND,\r\n  ADD_BRAND,\r\n  REMOVE_BRAND,\r\n  BRAND_SELECT,\r\n  FETCH_BRANDS_SELECT,\r\n  FETCH_BRANDs_REQUEST\r\n} from '../constants/brandConstatnt';\r\n\r\nimport handleError from '../utils/error';\r\n//import { formatSelectOptions } from '../../helpers/select';\r\nimport { allFieldsValidation } from '../utils/validation';\r\n\r\n\r\nexport const brandChange = (name, value) => {\r\n  let formData = {};\r\n  formData[name] = value;\r\n\r\n  return {\r\n    type: BRAND_CHANGE,\r\n    payload: formData\r\n  };\r\n};\r\n\r\nexport const brandEditChange = (name, value) => {\r\n  let formData = {};\r\n  formData[name] = value;\r\n\r\n  return {\r\n    type: BRAND_EDIT_CHANGE,\r\n    payload: formData\r\n  };\r\n};\r\n\r\nexport const handleBrandSelect = value => {\r\n  return {\r\n    type: BRAND_SELECT,\r\n    payload: value\r\n  };\r\n};\r\n\r\n\r\n// fetch store brands api\r\n\r\nexport const fetchStoreBrands = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({type:FETCH_BRANDs_REQUEST})\r\n    try {\r\n      const response = await axios.get(`/api/brand/select`);\r\n\r\n      dispatch({\r\n        type: FETCH_STORE_BRANDS,\r\n        payload: response.data.brands\r\n      });\r\n    } catch (error) {\r\n      handleError(error, dispatch);\r\n    }\r\n  };\r\n};\r\n\r\n// fetch brands api\r\nexport const fetchBrands = () => {\r\n\r\n  return async (dispatch, getState) => {\r\n    dispatch({type:FETCH_BRANDs_REQUEST})\r\n\r\n    try {\r\n      const response = await axios.get(`/api/brand/list`);\r\n\r\n      dispatch({\r\n        type: FETCH_BRANDS,\r\n        payload: response.data.brands\r\n      });\r\n    } catch (error) {\r\n      handleError(error, dispatch);\r\n    }\r\n  };\r\n};\r\n\r\n\r\n// fetch brand api\r\nexport const fetchBrand = brandId => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const response = await axios.get(`/api/brand/${brandId}`);\r\n\r\n      dispatch({\r\n        type: FETCH_BRAND,\r\n        payload: response.data.brand\r\n      });\r\n    } catch (error) {\r\n      handleError(error, dispatch);\r\n    }\r\n  };\r\n};\r\n\r\n\r\n// add brand api\r\nexport const addBrand = (brand) => async (dispatch, getState) => {\r\n \r\n\r\n    try {\r\n\r\n      \r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n\r\n      const response = await axios.post(`/api/brand/add`, brand,config);\r\n\r\n      const successfulOptions = {\r\n        title: `${response.data.message}`,\r\n        position: 'tr',\r\n        autoDismiss: 1\r\n      };\r\n\r\n      if (response.data.success === true) {\r\n        dispatch(success(successfulOptions));\r\n        dispatch({\r\n          type: ADD_BRAND,\r\n          payload: response.data.brand\r\n        });\r\n        const history=useHistory();\r\n       dispatch( history.push('/admin/brandlist'))\r\n      //dispatch(goBack());\r\n      }\r\n    } catch (error) {\r\n      handleError(error, dispatch);\r\n    }\r\n  };\r\n\r\n\r\n// update brand api\r\nexport const updateBrand = (brand) => async (dispatch, getState) => {\r\n\r\n    try {\r\n      const rules = {\r\n        name: 'required|min:6',\r\n        description: 'required|min:10|max:100'\r\n      };\r\n\r\n    //  const brand = getState().brand.brand;\r\n\r\n      const newBrand = {\r\n        name: brand.name,\r\n        description: brand.description\r\n      };\r\n\r\n      const { isValid, errors } = allFieldsValidation(newBrand, rules, {\r\n        'required.name': 'Name is required.',\r\n        'min.name': 'Name must be at least 6 characters.',\r\n        'required.description': 'Description is required.',\r\n        'min.description': 'Description must be at least 10 characters.',\r\n        'max.description': 'Description may not be greater than 100 characters.'\r\n      });\r\n\r\n      \r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n      const response = await axios.put(`/api/brand/${brand._id}`,\r\n        brand,config);\r\n\r\n      const successfulOptions = {\r\n        title: `${response.data.message}`,\r\n        position: 'tr',\r\n        autoDismiss: 1\r\n      };\r\n\r\n      if (response.data.success === true) {\r\n        dispatch(success(successfulOptions));\r\n        dispatch({\r\n          type: ADD_BRAND,\r\n          payload: response.data.brand\r\n        });\r\n        dispatch(goBack());\r\n      }\r\n    } catch (error) {\r\n      handleError(error, dispatch);\r\n    }\r\n  };\r\n\r\n// delete brand api\r\nexport const deleteBrand = id => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({type:FETCH_BRANDs_REQUEST})\r\n\r\n    try {\r\n\r\n      \r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n      const response = await axios.delete(`/api/brand/delete/${id}`,config);\r\n\r\n      const successfulOptions = {\r\n        title: `${response.data.message}`,\r\n        position: 'tr',\r\n        autoDismiss: 1\r\n      };\r\n\r\n      if (response.data.success === true) {\r\n        dispatch(success(successfulOptions));\r\n        dispatch({\r\n          type: REMOVE_BRAND,\r\n          payload: id\r\n        });\r\n     \r\n      }\r\n    } catch (error) {\r\n      handleError(error, dispatch);\r\n    }\r\n  };\r\n};\r\n","import clsx from 'clsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {List,Typography} from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport { Row, Col, ListGroup } from 'react-bootstrap'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { fetchCategories } from '../actions/categoryAction';\r\nimport { fetchBrand, fetchBrands } from '../actions/brandAction';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function Drawer2() {\r\n\r\nconst classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  //const [price1, setPrice1] = React.useState();\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n    dispatch({type:\"Toggle\"})\r\n  };\r\n  const names = [\r\n    'Prcie low to high',\r\n    'Prcie high to low',\r\n    'name A to Z',\r\n    'Heighest Rating'\r\n  ];\r\n\r\n  const [personName, setPersonName] = React.useState([]);\r\n  const dispatch = useDispatch()\r\n  \r\nconst category = useSelector(state => state.category)\r\nconst {categories}=category\r\n\r\nconst brand = useSelector(state => state.brand)\r\nconst {brands}=brand\r\n\r\nconst filter = useSelector(state => state.filter)\r\nconst {modalopen}=filter\r\nconst selectedcategory=filter.categories\r\nconst selectedbrand=filter.brands\r\n  const handleChange = (event) => {\r\n    setPersonName(event.target.value);\r\n    dispatch({type:\"SORTED\",payload:event.target.value})\r\n};\r\n\r\nconst [value, setValue] = React.useState([1550]);\r\nconst handleChangeslider =(event, newValue) => {\r\n  setValue(newValue);\r\n  dispatch({type:\"PRICERANGE\",payload:newValue})\r\n};\r\n\r\nconst handleChange2 = (event) => {\r\n   dispatch({type:\"SELECTCATEGORY\",payload:event.target.value})\r\n  };\r\n  \r\nconst  handleChange3=(event)=>{\r\n  dispatch({type:\"SELECTBRAND\",payload:event.target.value})\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(categories.length==0){\r\n    dispatch(fetchCategories())\r\n   \r\n    }\r\n  \r\n  }, [categories])\r\n   return (\r\n      \r\n    <div className={classes.root}>\r\n    <div className={classes.button}>\r\n                 \r\n                </div>\r\n    <CssBaseline />\r\n\r\n <Drawer className={classes.drawer} variant=\"persistent\"  anchor=\"left\"  open={modalopen} classes={{paper: classes.drawerPaper,}}>\r\n      <div className={classes.drawerHeader}>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n        </IconButton>\r\n      </div>\r\n\r\n      <Divider />\r\n\r\n      <ListGroup>\r\n      <ListGroup.Item>\r\n      <Typography id=\"range-slider\" gutterBottom>\r\n      price range\r\n    </Typography>\r\n    <Slider\r\n    defaultValue={16} value={value} min={0} max={1600}\r\n      onChange={handleChangeslider} valueLabelDisplay=\"auto\" aria-labelledby=\"range-slider\" \r\n    />\r\n      </ListGroup.Item>\r\n      </ListGroup>\r\n      <Divider />\r\n    <FormLabel component=\"legend\" style={{\"marginTop\":\"0.5rem\"}}>select category</FormLabel>\r\n\r\n      {categories.map((c)=>\r\n      <div key={c._id}>\r\n      <FormControlLabel\r\n          control={<Checkbox value={c._id} \r\n          checked={selectedcategory.includes(c._id)}\r\n           onChange={(e)=>handleChange2(e)} name=\"antoine\" />}\r\n          label={c.name}\r\n          style={{'marginBottom':\"-0.7rem\"}}\r\n        />\r\n  </div>)}\r\n\r\n  <Divider />\r\n    <FormLabel component=\"legend\" style={{\"marginTop\":\"0.5rem\"}}>select Brand</FormLabel>\r\n\r\n      {brands.map((c)=>\r\n      <div key={c._id}>\r\n      <FormControlLabel\r\n          control={<Checkbox value={c._id} \r\n          checked={selectedbrand.includes(c._id)}\r\n           onChange={(e)=>handleChange3(e)} name=\"antoine\" />}\r\n          label={c.name}\r\n          style={{'marginBottom':\"-0.7rem\"}}\r\n        />\r\n  </div>)}\r\n    </Drawer>\r\n    <main\r\n      className={clsx(classes.content, {\r\n        [classes.contentShift]: modalopen,\r\n      })}\r\n    >\r\n      <div className={classes.drawerHeader} />\r\n       \r\n      </main>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    button:{\r\n    marginLeft:'1.5rem',\r\n    },\r\n    appBar: {\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      marginTop:'5rem',\r\n\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      marginLeft:'1.5rem',\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(0),\r\n        minWidth: 230,\r\n        maxWidth: 300,\r\n        height:100\r\n      },\r\n    \r\n  }));\r\n\r\n\r\n//   {\r\n    \r\n//     <Divider />\r\n//     <ListGroup>\r\n//     <ListGroup.Item>\r\n//     <FormControl component=\"fieldset\">\r\n//   <FormLabel component=\"legend\">sort by</FormLabel>\r\n// {names.map((n)=>\r\n\r\n//   <RadioGroup  aria-label=\"filter by\" name=\"gender1\" value={personName} onChange={handleChange}>\r\n//     <FormControlLabel value={n} control={<Radio />} label={n} />\r\n//   </RadioGroup>\r\n//   )}\r\n// </FormControl>\r\n\r\n//     </ListGroup.Item>\r\n// </ListGroup>\r\n//   }","import React, { useState } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\nimport Drawer2 from './Drawer'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {List,Typography} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport clsx from 'clsx';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\nconst [open, setOpen] = useState(false)\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\nconst handleopen=()=>{\r\n  dispatch({type:\"Toggle\"})\r\n}\r\n\r\n  return (\r\n    <header>\r\n      \r\n      <Navbar bg='white' variant='pink' expand='lg' collapseOnSelect>      \r\n        <Container>\r\n        <IconButton aria-label=\"open drawer\" edge=\"start\"style={{height:'2rem',width:\"2rem\"}} >\r\n             <MenuIcon color=\"white\" onClick={handleopen}/>\r\n        </IconButton>  \r\n  \r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>test shop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Brand>it is test website</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav'style={{\"backgroundColor\":\"white\"}} >sign in</Navbar.Toggle>\r\n          <Navbar.Collapse id='basic-navbar-nav' >\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className='ml-auto' >\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/brandlist'>\r\n                    <NavDropdown.Item>Brand</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/categorylist'>\r\n                    <NavDropdown.Item>category</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n              {userInfo && userInfo.seller && !userInfo.isAdmin &&(\r\n                <NavDropdown title='seller' id='adminmenu'>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n              \r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright jaypatel</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = (props) => {\r\n  const {product}=props\r\n  \r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' style={{\"height\":\"13rem\"}}/>\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as='div'>\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n\r\n        <Card.Text as='h3'>${product.price}</Card.Text>\r\n        <Card.Text as='div'>Location:\r\n        <strong>{product.userLocation}</strong></Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport {\r\n  PRODUCT_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DELETE_SUCCESS,\r\n PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_SELECT_SUCCESS,\r\n  PRODUCT_SELECTED, \r\n  PRODUCTSELLER_LIST_SUCCESS,\r\n  PRODUCT_FAIL\r\n} from '../constants/productConstants'\r\nimport { logout } from './userActions'\r\n\r\n\r\nexport const handleProductSelect = value => {\r\n  return {\r\n    type: PRODUCT_SELECTED,\r\n    payload: value\r\n  };\r\n};\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type:PRODUCT_REQUEST })\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const listProductsseller = (keyword = '', pageNumber = '') => async (\r\n  dispatch,getState\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_REQUEST })\r\n\r\n    \r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n   const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    const { data } = await axios.get(\r\n      `/api/products/seller?keyword=${keyword}&pageNumber=${pageNumber}`,config\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCTSELLER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const listProductsAdmin = (keyword = '', pageNumber = '') => async (\r\n  dispatch,getState\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n   const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    const { data } = await axios.get(\r\n      `/api/products/admin?keyword=${keyword}&pageNumber=${pageNumber}`,config\r\n    )\r\n    dispatch({\r\n      type: PRODUCTSELLER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type:PRODUCT_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type:PRODUCT_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/products/${id}`, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    const { data } = await axios.post(`/api/products`, product, config)\r\n\r\n   \r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_FAIL,\r\n      payload:message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/top`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const selectProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/select`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_SELECT_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const productTopRated = useSelector((state) => state.productList)\r\n  const { loading, error, topproducts } = productTopRated\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts())\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {topproducts.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className='carousel-caption'>\r\n              <h2>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keyword' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To ProShop',\r\n  description: 'We sell the best products for cheap',\r\n  keywords: 'electronics, buy electronics, cheap electroincs',\r\n}\r\n\r\nexport default Meta\r\n","\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Dropdown } from 'react-bootstrap'\r\nimport Product from '../../components/Product'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport Paginate from '../../components/Paginate'\r\nimport ProductCarousel from '../../components/ProductCarousel'\r\nimport Meta from '../../components/Meta'\r\nimport { listProducts } from '../../actions/productActions'\r\nimport {fetchBrands} from '../../actions/brandAction'\r\nimport { fetchCategories } from '../../actions/categoryAction';\r\nimport Drawer2 from '../../components/Drawer';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { RadioGroup ,Radio,FormControlLabel} from '@material-ui/core';\r\nconst drawerWidth = 240;\r\n\r\n\r\nexport default function HomeScreen({match}) {\r\n    const classes = useStyles();\r\n   \r\n  const keyword = match.params.keyword\r\nconst pageNumber = match.params.pageNumber || 1\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n  \r\nconst category = useSelector(state => state.category)\r\nconst {categories}=category\r\n\r\n\r\nconst brand = useSelector(state => state.brand)\r\nconst {brands}=brand\r\nif(categories.length<=0){\r\n\r\n}\r\n\r\n\r\nconst [personName, setPersonName] = React.useState([]);\r\nconst [open, setOpen] = useState(false)\r\n\r\nconst handleChange = (event) => {\r\n  setPersonName(event.target.value);\r\n  console.log(event.target.value)\r\n  dispatch({type:\"SORTED\",payload:event.target.value})\r\n};\r\n\r\n\r\nconst names = [\r\n  'Prcie low to high',\r\n  'Prcie high to low',\r\n  'name A to Z',\r\n  'Heighest Rating'\r\n];\r\n\r\n\r\nuseEffect(() => {\r\n  //categories.forEach((c)=>{return dispatch({type:\"SELECTCATEGORY\",payload:c._id})})\r\n  dispatch({type:\"INITSELECTCATEGORY\",payload:categories})\r\n  dispatch({type:\"INITSELECTBRAND\",payload:brands})\r\n  \r\n}, [categories,brands])\r\n\r\nuseEffect(() => {\r\n if(products.length===0){\r\n  dispatch(listProducts(keyword, pageNumber))\r\n  dispatch(fetchBrands())\r\n }\r\n}, [dispatch, keyword, pageNumber])\r\n\r\nconst filter = useSelector(state => state.filter)\r\nconst {sort,price}=filter\r\n const priceproduct=error?[]:products.filter((p)=>{return p.price<=price})\r\nconst selectedcat=filter.categories\r\nconst selectedbrand=filter.brands\r\n var filteredproduct\r\n \r\n const catfilteredproduct=error ? []:priceproduct.filter((p)=>selectedcat.includes(p.category._id))\r\nfilteredproduct=error? []:catfilteredproduct.filter((p)=>selectedbrand.includes(p.brand._id))\r\n\r\n// const fproducts= error? []:  \r\nif(sort==='Prcie low to high'){\r\n  filteredproduct.sort((a,b)=>{return a.price-b.price})\r\n  \r\n}\r\nelse if(sort==='Prcie high to low'){\r\n  filteredproduct.sort((a,b)=>{return b.price-a.price})\r\n}\r\nelse if(sort ==='name A to Z'){\r\n  filteredproduct.sort(function(a,b){\r\n      return a.name.localeCompare(b.name);\r\n  })\r\n}\r\nelse if(sort ==='Heighest Rating'){\r\n  filteredproduct.sort((a,b)=>{\r\n      return b.rating-a.rating;\r\n  })\r\n};\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n       <div className={classes.button}>\r\n\r\n       </div>\r\n       <CssBaseline />\r\n             <Drawer2 />\r\n                <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n       \r\n      >\r\n      <div className={classes.drawerHeader} />\r\n        <>\r\n      <Meta />\r\n      <Link className='btn btn-light my-3' to='/brand' style={{\"backgroundColor\":\"pink\" ,\"margin\":\"1rem\"}}>\r\n        Product By brand\r\n      </Link> \r\n      <Link className='btn btn-light my-3' to='/category' style={{\"backgroundColor\":\"pink\"}}>\r\n        Product By category\r\n      </Link> \r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to='/' className='btn btn-light'>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1 >Latest Products</h1>\r\n      \r\n      <Dropdown>\r\n  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n    Sort By\r\n  </Dropdown.Toggle>\r\n\r\n  <Dropdown.Menu >\r\n  {names.map((n)=>\r\n\r\n  <RadioGroup  aria-label=\"filter by\" name=\"gender1\" key={n} value={personName} onChange={handleChange}>\r\n      <FormControlLabel value={n} control={<Radio />} label={n} />\r\n    </RadioGroup>\r\n  )}\r\n  </Dropdown.Menu>\r\n</Dropdown>\r\n     \r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (  \r\n        <div >\r\n          <Row>\r\n            {filteredproduct.slice((0+10*(pageNumber-1)),10*pageNumber).map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3} >\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n      </div>  \r\n      )}\r\n    </>\r\n    </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n  \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      marginLeft:80,\r\n    },\r\n    button:{\r\n    marginLeft:'1.5rem',\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      marginTop:'5rem',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(4),\r\n      marginLeft:200,\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n  \r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },  \r\n  }));\r\n  ","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Brand = ({brand}) => {\r\n\r\n  return (\r\n    \r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/brand/${brand.slug}`}>\r\n        <Card.Img src={brand.image} variant='top' />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/brand/${brand.slug}`}>\r\n          <Card.Title as='h3' color='blue'>\r\n            <strong>{brand.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n        <Card.Text as='h5'>{brand.description}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n    \r\n  )\r\n}\r\n\r\nexport default Brand\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Brand from '../../components/Brand'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport Paginate from '../../components/Paginate'\r\nimport ProductCarousel from '../../components/ProductCarousel'\r\nimport Meta from '../../components/Meta'\r\nimport { listProducts } from '../../actions/productActions'\r\nimport { fetchBrands } from '../../actions/brandAction'\r\n\r\nconst BrandScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  //const productList = useSelector((state) => state.productList)\r\n  //const { loading, error, products, page, pages } = productList\r\n\r\n  const brand=useSelector((state)=>state.brand) \r\n  const {brands,loading,error}=brand\r\n \r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n    dispatch(fetchBrands())\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      \r\n      <h1> SELECT BRAND</h1>\r\n      <Link className='btn btn-light my-3' to='/' style={{\"backgroundColor\":\"pink\" ,\"margin\":\"1rem\"}}>\r\n    Go back\r\n  </Link> \r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {brands.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Brand brand={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n           // pages={pages}\r\n            //page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BrandScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Brand from '../../components/Brand'\r\nimport Product from '../../components/Product'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport Paginate from '../../components/Paginate'\r\nimport ProductCarousel from '../../components/ProductCarousel'\r\nimport Meta from '../../components/Meta'\r\nimport { listProducts } from '../../actions/productActions'\r\nimport { fetchBrands } from '../../actions/brandAction'\r\n\r\nconst Brandproduct = ({ match }) => {\r\n  const keyword = match.params.keyword\r\nconst slug=match.params.slug\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  //const productList = useSelector((state) => state.productList)\r\n  //const { loading, error, products, page, pages } = productList\r\n\r\n  const brand=useSelector((state)=>state.brand) \r\n  const {brands,loading,error}=brand\r\n \r\n \r\n  const brandproduct = brands.filter((b)=>b.slug===slug)\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n    dispatch(fetchBrands())\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      <Link className='btn btn-light my-3' to='/brand'>\r\n        Go Back\r\n      </Link> \r\n      {brandproduct.map((p)=>\r\n      <h1>{p.name}</h1>)}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n          {brandproduct.map((p)=>\r\n            p.products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            )) \r\n            )}\r\n          </Row>\r\n          <Paginate\r\n           // pages={pages}\r\n            //page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}  \r\n    </>\r\n      \r\n  )\r\n}\r\n\r\nexport default Brandproduct\r\n","import axios from 'axios'\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,SET_CART_ID,\r\n\r\n  GET_CART_ITEM\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty,user) => async (dispatch, getState) => {\r\n  //const { data } = await axios.get(`/api/products/${id}`)\r\n  const {\r\n    userLogin: { userInfo },\r\n  } = getState()\r\n//const {cart:{cartId}}=getState()\r\nconst cartId = localStorage.getItem('cart_id');\r\n\r\nif(!cartId){\r\n  const {data}=await axios.post(`/api/cart/add`,{product:id,qty:qty,seller:user}, \r\n  {headers: { Authorization: `Bearer ${userInfo.token}`}})\r\n  dispatch( getCartItem())\r\n}else{\r\n  const {data}=await axios.put(`/api/cart/add/${cartId}`,{product:id,qty:qty,seller:user}, \r\n  {headers: { Authorization: `Bearer ${userInfo.token}`}})\r\n    dispatch( getCartItem())\r\n}\r\n}\r\n\r\n\r\nexport const getCartId = () => {\r\n  return async (dispatch, getState) => {\r\n  try{  \r\n      const cartId = localStorage.getItem('cart_id');\r\n      \r\n  const {\r\n    userLogin: { userInfo },\r\n  } = getState()\r\n      // create cart id if there is no one\r\n      if (!cartId) {\r\n        const response = await axios.get(`/api/cart/id`,{headers: { Authorization: `Bearer ${userInfo.token}`}});\r\n\r\n        dispatch({type:GET_CART_ITEM,payload:response.data.products})\r\n        dispatch(setCartId(response.data.cartId));\r\n      }\r\n  }\r\n  \r\n  catch(err){\r\n       console.log(err)\r\n  }\r\n}\r\n};\r\n\r\nexport const setCartId = cartId => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: SET_CART_ID,\r\n      payload: cartId\r\n    });\r\n  };\r\n};\r\n\r\nexport const getCartItem = () => {\r\n  return async (dispatch, getState) => {\r\n     try{\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n        \r\n            const response = await axios.get(`/api/cart/id`,{headers: { Authorization: `Bearer ${userInfo.token}`}});   \r\n            dispatch({type:GET_CART_ITEM,payload:response.data.products})\r\n\r\n     }  catch(error){\r\n       console.log(error)\r\n     }\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const removeFromCart = (id) => async(dispatch, getState) => {\r\n\r\n  const cartId = localStorage.getItem('cart_id');\r\n  const {\r\n    userLogin: { userInfo },\r\n  } = getState()\r\n\r\n   await axios.delete(`/api/cart/delete/${cartId}/${id}`,{headers: { Authorization: `Bearer ${userInfo.token}`}})\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  })\r\n\r\n  \r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../../components/Rating'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport Meta from '../../components/Meta'\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../../constants/productConstants'\r\nimport { addToCart, getCartId } from '../../actions/cartActions'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, product } = productList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productReviewCreate = useSelector((state) => state.productList)\r\n  const {\r\n    success: successProductReview,\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate\r\n\r\n  useEffect(() => {\r\n    dispatch(getCartId())\r\n  //  dispatch(listProductDetails(match.params.id))\r\n  \r\n\r\n    if (successProductReview) {\r\n      setRating(0)\r\n      setComment('')\r\n    }\r\n\r\n  //  if (!product._id || product._id !== match.params.id) {\r\n      dispatch(listProductDetails(match.params.id))\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    //}\r\n  }, [dispatch, match, successProductReview])\r\n\r\n  \r\n\r\n  const addToCartHandler = () => {\r\n    dispatch(addToCart(match.params.id,qty,product.user))\r\n    history.push(`/cart`)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {successProductReview && (\r\n                    <Message variant='success'>\r\n                      Review submitted successfully\r\n                    </Message>\r\n                  )}\r\n                  {loadingProductReview && <Loader />}\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type='submit'\r\n                        variant='primary'\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../../components/Message'\r\nimport { addToCart, removeFromCart, getCartId,getCartItem } from '../../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo, } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch( getCartId())\r\n    dispatch(getCartItem())\r\n    // if (productId) {\r\n    //   dispatch(addToCart(productId, qty))\r\n    // }\r\n      if(!userInfo){\r\n           history.push('/login')\r\n      }\r\n  }, [dispatch,])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport FormContainer from '../../components/FormContainer'\r\nimport { login } from '../../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport FormContainer from '../../components/FormContainer'\r\nimport { register } from '../../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\nconst [seller, setSeller] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n\r\n\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password,seller))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n      <Form.Label as=\"legend\" column sm={2}>\r\n        Radios\r\n      </Form.Label>\r\n      <Col sm={10}>\r\n        <Form.Check\r\n          type=\"radio\"\r\n          label=\"Buyer\"\r\n          name=\"formHorizontalRadios\"\r\n          id=\"formHorizontalRadios2\"\r\n          onClick={()=>setSeller(false)}\r\n        />\r\n        <Form.Check\r\n          type=\"radio\"\r\n          label=\"Seller\"\r\n          name=\"formHorizontalRadios\"\r\n          id=\"formHorizontalRadios3\"\r\n          onClick={()=>setSeller(true)}\r\n        />\r\n      </Col>\r\n    </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import axios from 'axios'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\nimport {\r\n\r\n  \r\n  ORDER_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_DELIVER_SUCCESS,\r\n  \r\n} from '../constants/orderConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    })\r\n    localStorage.removeItem('cartItems')\r\n    localStorage.removeItem('cart_id')\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listOrdersseller = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const listOrdersAdmin = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/admin`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../../actions/userActions'\r\nimport { listMyOrders } from '../../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../../constants/userConstants'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n//  const { loading, error } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo,user, loading, error } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.order)\r\n  const { loading: loadingOrders, error: errorOrders, myOrders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Confirm password'\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {myOrders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../../components/FormContainer'\r\nimport CheckoutSteps from '../../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../../components/FormContainer'\r\nimport CheckoutSteps from '../../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/placeorder')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport CheckoutSteps from '../../components/CheckoutSteps'\r\nimport { createOrder } from '../../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../../constants/orderConstants'\r\nimport { USER_DETAILS_RESET } from '../../constants/userConstants'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    history.push('/shipping')\r\n  } else if (!cart.paymentMethod) {\r\n    history.push('/payment')\r\n  }\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n      dispatch({ type: USER_DETAILS_RESET })\r\n      dispatch({ type: ORDER_CREATE_RESET })\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error,success } = orderDetails\r\n\r\n  \r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || success || success || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, success, success, order])\r\n\r\n  const successmentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loading && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successmentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loading && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users} = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo, } = userLogin\r\n\r\n  const userDelete = useSelector((state) => state.userLogin)\r\n  const { success: successDelete } = userDelete\r\n\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    if( users.length===0 && userInfo && userInfo.isAdmin){\r\n      dispatch(listUsers())\r\n     }\r\n    if (!userInfo && !userInfo.isAdmin) {\r\n       // dispatch(listUsers())\r\n      history.push('/login')\r\n    }\r\n\r\n  }, [dispatch, history, successDelete, userInfo])\r\n  //dispatch(listUsers())\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th>seller</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                \r\n                <td>\r\n                  {user.seller ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\nconst [seller, setSeller] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userLogin)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector((state) => state.userLogin)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user|| user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n        setSeller(user.seller)\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin,seller }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n\r\n\r\n            <Form.Group controlId='seller'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='seller'\r\n                checked={seller}\r\n                onChange={(e) => setSeller(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport Paginate from '../../components/Paginate'\r\nimport {\r\n\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n  listProductsseller,\r\n  listProductsAdmin\r\n} from '../../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productListseller = useSelector((state) => state.productList)\r\n  const { loading, error, sellerproducts, page, pages,success,product } = productListseller\r\n\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n  \r\n    if (!userInfo || !userInfo.isAdmin && !userInfo.seller) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (success) {\r\n      history.push(`/admin/product/${product._id}/edit`)\r\n    } else {\r\n      if(userInfo.isAdmin){\r\n      dispatch(listProductsAdmin('', pageNumber))\r\n      }else{\r\n        dispatch(listProductsseller('', pageNumber))\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    success,\r\n    \r\n    product,\r\n    pageNumber,\r\n  ])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    history.push(`/admin/product/add`)\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n     \r\n      {error && <Message variant='danger'>{error}</Message>}\r\n     \r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>image</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>stoke</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sellerproducts.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td><img src={product.image} style={{\"width\":\"4rem\",\"height\":\"4rem\"}}/></td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.countInStock}</td>\r\n               {product.category.slug?<td>{product.category.slug}</td>:<td>{null}</td>}\r\n               {product.brand.slug?<td>{product.brand.slug}</td>:<td>{null}</td>}\r\n                  \r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport FormContainer from '../../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../../constants/productConstants'\r\nimport {fetchBrands,fetchStoreBrands} from '../../actions/brandAction'\r\nimport {fetchCategories} from '../../actions/categoryAction'\r\n\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n  const [userLocation, setUserLocation] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productList)\r\n  const { loading, error, product,success } = productDetails\r\n\r\n  const categorySelect=  useSelector((state)=>state.category)\r\n  const {categories}=categorySelect\r\n\r\n  const userInfo=JSON.parse(localStorage.getItem('userInfo'))           \r\n  const brands=useSelector((state)=>state.brand)\r\n  const {storeBrands} =brands\r\n\r\n  useEffect(() => {\r\n    if(product.user!==userInfo._id && !userInfo.isAdmin){\r\n      history.push('/')\r\n    }\r\n    dispatch(fetchCategories())\r\n    dispatch(fetchStoreBrands())\r\n    if (success) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n        setUserLocation(product.userLocation)\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, success])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,userLocation\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {error&& <Message variant='danger'>{error}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        )  : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                          as='select'\r\n                          value={brand}\r\n                          onChange={(e) => setBrand(e.target.value)}\r\n                       //multiple\r\n                     //  onChange={e => setBrand([].slice.call(e.target.selectedOptions).map(item => item.value))}\r\n                        >\r\n                      {storeBrands.map((pro)=>                        \r\n                          <option value={pro._id}>{pro.slug}</option>\r\n                           )}            \r\n                        </Form.Control>\r\n            \r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            \r\n            <Form.Group controlId='category'>\r\n             \r\n              <Form.Control\r\n                as='select'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              >\r\n                          <option value=''>select category</option>\r\n\r\n           {categories.map((cat)=>                        \r\n                          <option value={cat._id}>{cat.slug}</option>\r\n  )}          \r\n              </Form.Control>\r\n            </Form.Group>\r\n            \r\n            \r\n        <Form.Group controlId='Location'>\r\n          <Form.Label>Location</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter Location'\r\n            value= {`${userLocation}`}\r\n            onChange={(e) => setUserLocation(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport FormContainer from '../../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../../constants/productConstants'\r\nimport {\r\n    listProducts,\r\n    deleteProduct,\r\n    createProduct,selectProducts\r\n  } from '../../actions/productActions'\r\n  import {fetchBrands,fetchStoreBrands} from '../../actions/brandAction'\r\n  import {fetchCategories} from '../../actions/categoryAction'\r\nimport Select from 'react-select'\r\n\r\nconst ProductAddScreen = ({ match, history }) => {\r\n  \r\n  const [name, setName] = useState('T-shirt')\r\n  const [price, setPrice] = useState(20)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(10)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productList)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productList)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n\r\n  \r\n  const categorySelect=  useSelector((state)=>state.category)\r\n  const {categories}=categorySelect\r\n\r\n\r\n   const brands=useSelector((state)=>state.brand)\r\n   const {storeBrands} =brands\r\nconst [userLocation, setUserLocation] = useState('')\r\n    \r\n  const [details, setDetails] = useState(null);\r\n   const getUserGeolocationDetails = () => {\r\n             fetch(\r\n            \"https://geolocation-db.com/json/7a802a00-8c89-11eb-9c50-4fd4fef29257/157.32.96.46\"\r\n          )\r\n              .then(response => response.json())\r\n              .then(data => setUserLocation(data.state));\r\n      };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategories())\r\n    dispatch(fetchStoreBrands())\r\n    getUserGeolocationDetails()\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push('/admin/productlist')\r\n    }\r\n    \r\n   },\r\n [dispatch, history, product, successUpdate])\r\n\r\n\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    \r\n    dispatch(\r\n        createProduct({\r\n        name, price,image, brand,category,description,countInStock,userLocation\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>ADD Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {error&& <Message variant='danger'>{error.message}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        )  : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n          \r\n            <Form.Control\r\n                          as='select'\r\n                          value={brand}\r\n                          onChange={(e) => setBrand(e.target.value)} \r\n                       \r\n                        >\r\n                          <option value=''> select brand</option>\r\n                        \r\n  {storeBrands.map((pro)=>                        \r\n                          <option value={pro._id}>{pro.slug}</option>\r\n  )}            \r\n                        </Form.Control>\r\n            \r\n            </Form.Group>\r\n            \r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n             \r\n              <Form.Control\r\n                as='select'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              >\r\n                          <option value=''>select category</option>\r\n\r\n           {categories.map((cat)=>                        \r\n                          <option value={cat._id}>{cat.slug}</option>\r\n  )}          \r\n              </Form.Control>\r\n            </Form.Group>\r\n            \r\n        <Form.Group controlId='Location'>\r\n          <Form.Label>Location</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter Location'\r\n            value= {`${userLocation}`}\r\n            onChange={(e) => setUserLocation(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n     \r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Save\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductAddScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrdersseller,listOrdersAdmin } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const orderList = useSelector((state) => state.order)\r\n  const { loading, error, Listorder } = orderList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin ||userInfo.seller) {\r\n     if(userInfo.isAdmin){\r\n      dispatch(listOrdersAdmin())\r\n    }else{\r\n       dispatch(listOrdersseller())\r\n     }\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, userInfo])\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>image</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Listorder.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td><img src={order.orderItems[0].image}  style={{\"width\":\"4rem\",\"height\":\"4rem\"}}></img></td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {userInfo.isAdmin?(\r\n                 <LinkContainer to={`/admin/order/${order._id}`}>\r\n                          <Button variant='light' className='btn-sm'>\r\n                                  Details\r\n                         </Button>\r\n                     </LinkContainer>\r\n                  ):(\r\n                    <LinkContainer to={`/seller/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  )\r\n               \r\n}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport FormContainer from '../../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../../constants/productConstants'\r\nimport {\r\n    listProducts,\r\n    deleteProduct,\r\n    createProduct,selectProducts\r\n  } from '../../actions/productActions'\r\nimport {addBrand, fetchBrands,fetchStoreBrands} from '../../actions/brandAction'\r\nimport { RESET_BRAND } from '../../constants/brandConstatnt'\r\nimport Select from 'react-select'\r\n\r\n\r\n\r\nconst BrandAddScreen = ({ match, history }) => {\r\n  \r\n  const [name, setName] = useState('')\r\n  const [image, setImage] = useState('')\r\n//  const [products, setProducts] = useState([])\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  \r\n  const ProductSelect=  useSelector((state)=>state.productList)\r\n   //const { products,selectedProducts}=ProductSelect\r\n  //  const productforselect=ProductSelect.products\r\n\r\n  //  const selectoption=[]\r\n\r\n  //  productforselect.forEach((pro)=>\r\n  //  selectoption.push({label:pro.slug,value:pro._id})\r\n  //  )\r\n\r\n   const {loading}=ProductSelect\r\n\r\n   const brands=useSelector((state)=>state.brand)\r\n   const {storeBrands,success} =brands\r\n    \r\n  useEffect(() => {\r\n      dispatch({type:RESET_BRAND})\r\n     if (success) {\r\n    //   dispatch({ type: PRODUCT_UPDATE_RESET })\r\n       history.push('/admin/brandlist')\r\n     }\r\n     dispatch(fetchStoreBrands())    \r\n    dispatch(selectProducts())\r\n   },\r\n [dispatch, history,success])\r\n\r\n\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    \r\n    dispatch(\r\n      addBrand({\r\n        name,image,description,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/brandlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>ADD Brand</h1>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              SAVE\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BrandAddScreen\r\n\r\n\r\n// {\r\n  \r\n//   <Form.Group controlId='brand'>\r\n          \r\n                        \r\n//   <Select\r\n//   value={products}\r\n//   onChange={(e)=>setProducts(e.value)}\r\n//    options={selectoption}\r\n//    isMulti={true}\r\n//   />               \r\n     \r\n//     </Form.Group>\r\n// }","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport FormContainer from '../../components/FormContainer'\r\nimport { listProductDetails, updateProduct,selectProducts } from '../../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../../constants/productConstants'\r\nimport {fetchStoreBrands,updateBrand, fetchBrand} from '../../actions/brandAction'\r\nimport { RESET_BRAND } from '../../constants/brandConstatnt'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst BrandEditScreen = ({ match, history }) => {\r\n  const brandId = match.params.id\r\n\r\n  const brands=useSelector((state)=>state.brand)\r\n  const {storeBrands,brand,success,loading} =brands\r\n  \r\n  const [name, setName] = useState('')\r\n  const [image, setImage] = useState('')\r\n  const [products, setProducts] = useState([])\r\n  const [data, setData] = useState([])\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n\r\n  // const ProductSelect=  useSelector((state)=>state.ProductSelect)\r\n  //  //const { products,selectedProducts}=ProductSelect\r\n  //  const productforselect=ProductSelect.products\r\n\r\n  //  const selectoption=[]\r\n\r\n  //  productforselect.forEach((pro)=>\r\n  //  selectoption.push({label:pro.slug,value:pro._id})\r\n  //  )\r\n\r\n  \r\n  useEffect(() => {\r\n    dispatch(selectProducts())\r\n    dispatch(fetchStoreBrands())\r\n    \r\n    \r\n    if (success) {\r\n    \r\n      history.push('/admin/brandlist')\r\n    } \r\n    if (!brand.name || brand._id !==brandId) {\r\n      dispatch( fetchBrand(brandId)) \r\n       } else {\r\n        const oldproducts=[]\r\n        brand.products.forEach((pro)=>\r\n        oldproducts.push({label:pro.slug,value:pro._id})\r\n        )\r\n        setName(brand.name)\r\n        setImage(brand.image)\r\n        setDescription(brand.description)\r\n        setProducts(oldproducts)\r\n      }\r\n    \r\n  }, [dispatch, history, brandId,brand, success])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateBrand({\r\n        _id: brandId,\r\n        name:name,\r\n        image:image,\r\n        description:description,\r\n      })\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <Link to='/admin/brandlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>ADD Brand</h1>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            \r\n    \r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default BrandEditScreen\r\n\r\n\r\n\r\n// {\r\n//   <Form.Group controlId='brand'>\r\n          \r\n//             <Select\r\n//           value={products}\r\n//           onChange={(e)=>setProducts(e)}\r\n//            options={selectoption}\r\n//            isMulti={true}\r\n//           />               \r\n             \r\n            \r\n//             </Form.Group>\r\n            \r\n// }","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport Paginate from '../../components/Paginate'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,selectProducts\r\n} from '../../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../../constants/productConstants'\r\nimport { RESET_BRAND } from '../../constants/brandConstatnt'\r\nimport { deleteBrand, fetchStoreBrands } from '../../actions/brandAction'\r\n\r\nconst BrandListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n \r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const brandselect=useSelector((state)=>state.brand)\r\n  const {loading ,storeBrands,success} =brandselect\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchStoreBrands())\r\n    dispatch({type:RESET_BRAND})\r\nif(success){\r\n    dispatch(fetchStoreBrands())\r\n}\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo || !userInfo.isAdmin && !userInfo.seller) {\r\n      history.push('/login')\r\n    }\r\n\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n  \r\n  ])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteBrand(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    history.push(`/admin/brand/add`)\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Brands</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Brand\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loading ? (\r\n        <Loader />\r\n      )  : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRODUCTS</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {storeBrands.map((brand) => (\r\n               \r\n                <tr key={brand._id}>  \r\n                  <td>{brand._id}</td>\r\n                  <td>{brand.name}</td>\r\n                 <tr> {brand.products.map((pr)=><td> {pr.name}</td> )}</tr> \r\n                  \r\n                  <td>\r\n                    <LinkContainer to={`/admin/brand/${brand._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(brand._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BrandListScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport Paginate from '../../components/Paginate'\r\nimport {fetchCategories,deleteCategory} from '../../actions/categoryAction'\r\nimport {RESET_CATEGORY} from '../../constants/categoryConstant'\r\n\r\nconst CategoryListScreen = ({ history, match }) => {\r\n  \r\n  const pageNumber = match.params.pageNumber || 1\r\n  const dispatch = useDispatch()\r\n\r\n  \r\n\r\n  \r\n  const categorySelect=  useSelector((state)=>state.category)\r\n  const {categories,loading,error,success}=categorySelect\r\n\r\n \r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n\r\n    dispatch(fetchCategories())\r\n  \r\n    dispatch({type:RESET_CATEGORY})\r\n  \r\n    if (!userInfo || !userInfo.isAdmin ) {\r\n      history.push('/login')\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    pageNumber\r\n  ])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteCategory(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    history.push(`/admin/category/add`)\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Category</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRODUCTS</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {categories.map((category) => (\r\n                <tr key={category._id}>\r\n                  <td>{category._id}</td>\r\n                  <td>{category.name}</td>\r\n                  <tr> {category.products.map((pr)=><td> {pr.name}</td> )}</tr> \r\n                  <td>\r\n                    <LinkContainer to={`/admin/category/${category._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(category._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CategoryListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport FormContainer from '../../components/FormContainer'\r\nimport {selectProducts\r\n  } from '../../actions/productActions'\r\n//import { fetchBrands,fetchStoreBrands} from '../../actions/brandAction'\r\nimport { RESET_BRAND } from '../../constants/brandConstatnt'\r\nimport { RESET_CATEGORY } from '../../constants/categoryConstant'\r\nimport {addCategory} from '../../actions/categoryAction'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst CategoryAddScreen = ({ match, history }) => {\r\n  \r\n  const [name, setName] = useState('')\r\n  const [image, setImage] = useState('')\r\n  const [products, setProducts] = useState([])\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  const ProductSelect=  useSelector((state)=>state.productList)\r\n   //const { products,selectedProducts}=ProductSelect\r\n   const productforselect=ProductSelect.products\r\n   const error1=ProductSelect.error\r\n\r\n   const categorySelect=  useSelector((state)=>state.category)\r\n   const {categories,loading,success,error}=categorySelect\r\n    \r\n\r\n   \r\n\r\n     const selectoption=[]\r\n \r\n     productforselect.forEach((pro)=>\r\n     selectoption.push({label:pro.slug,value:pro._id})\r\n     )\r\n \r\n     const array=[]\r\n     products.forEach((p)=>array.push(p.value))\r\n\r\n  useEffect(() => {\r\n      dispatch({type:RESET_CATEGORY})\r\n      if (success) {\r\n    //   dispatch({ type: PRODUCT_UPDATE_RESET })\r\n       history.push('/admin/categorylist')\r\n     }\r\n   //  dispatch(fetchStoreBrands())    \r\n    dispatch(selectProducts())\r\n   },\r\n [dispatch, history,success])\r\n\r\n\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    \r\n    dispatch(\r\n      addCategory({\r\n        name,image, array,description,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/categorylist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>ADD Category</h1>\r\n        {loading ? (\r\n          <Loader />\r\n        ) :  error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ): error1 ? (\r\n            <Message variant='danger'>{error1}</Message>\r\n          ):\r\n        (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n         \r\n             <Select\r\n            value={products}\r\n            onChange={(e)=>setProducts(e)}\r\n             options={selectoption}\r\n             isMulti={true}\r\n             />               \r\n            </Form.Group>\r\n            \r\n    \r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Save\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CategoryAddScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../../components/Loader'\r\nimport FormContainer from '../../components/FormContainer'\r\nimport { selectProducts } from '../../actions/productActions'\r\nimport Select from 'react-select'\r\n\r\n\r\nimport {fetchCategory, updateCategory} from '../../actions/categoryAction'\r\n\r\nconst CategoryEditScreen = ({ match, history }) => {\r\n  const categoryId = match.params.id\r\n\r\n  \r\n  const [name, setName] = useState('')\r\n  const [image, setImage] = useState('')\r\n  const [products, setProducts] = useState([])\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const ProductSelect=  useSelector((state)=>state.productList)\r\n   //const { products,selectedProducts}=ProductSelect\r\n   const productforselect=ProductSelect.products\r\n\r\n   \r\n  const categorySelect=  useSelector((state)=>state.category)\r\n  const {categories,category,success,loading,error}=categorySelect\r\n\r\n  \r\n  useEffect(() => {\r\n    \r\n   \r\n    dispatch(selectProducts())\r\n    if (success) {\r\n      history.push('/admin/categorylist')\r\n    } \r\n    if (!category.name || category._id !==categoryId) {\r\n      dispatch( fetchCategory(categoryId)) \r\n       } else {\r\n        const oldproducts=[]\r\n        category.products.forEach((pro)=>\r\n        oldproducts.push({label:pro.slug,value:pro._id})\r\n        )\r\n        setName(category.name)\r\n        setImage(category.image)\r\n        setDescription(category.description)\r\n        setProducts(oldproducts)\r\n      }\r\n    \r\n  }, [dispatch, history, categoryId,category, success])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n\r\n  \r\n  const selectoption=[]\r\n \r\n  productforselect.forEach((pro)=>\r\n  selectoption.push({label:pro.slug,value:pro._id})\r\n  )\r\n\r\n  const array=[]\r\n  products.forEach((p)=>array.push(p.value))\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateCategory({\r\n        _id: categoryId,\r\n        name:name,\r\n        image:image,\r\n        array:array,\r\n        description:description,\r\n      })\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <Link to='/admin/categorylist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Category</h1>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n            <Select\r\n            value={products}\r\n            onChange={(e)=>setProducts(e)}\r\n             options={selectoption}\r\n             isMulti={true}\r\n             />               \r\n            \r\n            </Form.Group>\r\n            \r\n    \r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default CategoryEditScreen\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Category = ({ brand }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/category/${brand.slug}`}>\r\n        <Card.Img src={brand.image} variant='top' />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/category/${brand.slug}`}>\r\n          <Card.Title as='h3'>\r\n            <strong>{brand.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n        <Card.Text as='h5'>{brand.description}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Category\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Category from '../../components/Category'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport Paginate from '../../components/Paginate'\r\nimport ProductCarousel from '../../components/ProductCarousel'\r\nimport Meta from '../../components/Meta'\r\nimport { listProducts } from '../../actions/productActions'\r\nimport { fetchBrands } from '../../actions/brandAction'\r\nimport { fetchCategories } from '../../actions/categoryAction'\r\n\r\nconst CategoryScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  //const productList = useSelector((state) => state.productList)\r\n  //const { loading, error, products, page, pages } = productList\r\n\r\n  const brand=useSelector((state)=>state.category) \r\n  const {categories,loading,error}=brand\r\n \r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n    dispatch(fetchCategories())\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n    <Meta />\r\n    \r\n    <h1> SELECT Category</h1>\r\n    <Link className='btn btn-light my-3' to='/' style={{\"backgroundColor\":\"pink\" ,\"margin\":\"1rem\"}}>\r\n    Go back\r\n  </Link> \r\n    {loading ? (\r\n      <Loader />\r\n    ) : error ? (\r\n      <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n      <>\r\n        <Row>\r\n          {categories.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Category brand={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Paginate\r\n         // pages={pages}\r\n          //page={page}\r\n          keyword={keyword ? keyword : ''}\r\n        />\r\n      </>\r\n    )}\r\n  </>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default CategoryScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Brand from '../../components/Brand'\r\nimport Product from '../../components/Product'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport Paginate from '../../components/Paginate'\r\nimport ProductCarousel from '../../components/ProductCarousel'\r\nimport Meta from '../../components/Meta'\r\nimport { listProducts } from '../../actions/productActions'\r\nimport { fetchBrands } from '../../actions/brandAction'\r\n\r\nconst CategoryProduct = ({ match }) => {\r\n  const keyword = match.params.keyword\r\nconst slug=match.params.slug\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  //const productList = useSelector((state) => state.productList)\r\n  //const { loading, error, products, page, pages } = productList\r\n\r\n  const brand=useSelector((state)=>state.category) \r\n  const {categories,loading,error}=brand\r\n \r\n \r\n  const categoryproduct = categories.filter((b)=>b.slug===slug)\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n    dispatch(fetchBrands())\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      <Link className='btn btn-light my-3' to='/category'>\r\n        Go Back\r\n      </Link>\r\n      {categoryproduct.map((p)=>\r\n      <h1>{p.name}</h1>)}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n          {categoryproduct.map((p)=>\r\n            p.products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            )) \r\n            )}\r\n          </Row>\r\n          <Paginate\r\n           // pages={pages}\r\n            //page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}  \r\n    </>\r\n      \r\n  )\r\n}\r\n\r\nexport default CategoryProduct\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n \r\n    <Route\r\n        {...rest}\r\n        render={props => {\r\n            const userInfo=JSON.parse(localStorage.getItem('userInfo'))           \r\n            if (!userInfo.isAdmin) {\r\n                // not logged in so redirect to login page with the return url\r\n                return (\r\n                    <Redirect\r\n                        to={{ pathname: '/', state: { from: props.location } }}\r\n                    />\r\n                );\r\n            }\r\n\r\n            // authorised so return component\r\n            return <Component {...props} />;\r\n        }}\r\n    />\r\n);\r\n\r\nexport default AdminRoute;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nconst SellerRoute = ({ component: Component, ...rest }) => (\r\n \r\n    <Route\r\n        {...rest}\r\n        render={props => {\r\n            const userInfo=JSON.parse(localStorage.getItem('userInfo'))           \r\n            if (!userInfo.seller) {\r\n                // not logged in so redirect to login page with the return url\r\n                return (\r\n                    <Redirect\r\n                        to={{ pathname: '/', state: { from: props.location } }}\r\n                    />\r\n                );\r\n            }\r\n\r\n            // authorised so return component\r\n            return <Component {...props} />;\r\n        }}\r\n    />\r\n);\r\n\r\nexport default SellerRoute;","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../../constants/orderConstants'\r\n\r\nconst OrderScreenAdmin = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error,success } = orderDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n   \r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n     // \r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if ( !order || success || success || order._id !== orderId ) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, success, success, order])\r\n\r\n\r\n  const successmentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loading && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successmentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loading && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreenAdmin\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../../constants/orderConstants'\r\n\r\nconst OrderScreenSeller = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error,success } = orderDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.totalPrice=order.orderItems.reduce((acc,item)=>acc+item.price*item.qty,0)\r\n                                +order.shippingPrice+order.taxPrice\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n  if(order){\r\n      order.orderItems=order.orderItems.filter((o)=>o.seller._id===userInfo._id)\r\n  }\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n     // \r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || success || success || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, success, success, order])\r\n\r\n  const successmentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loading && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successmentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loading && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreenSeller\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/Customer/Home2'\r\nimport BrandScreen from './screens/Customer/Brandscreen'\r\nimport Brandproduct from './screens/Customer/Brandproduct'\r\nimport ProductScreen from './screens/Customer/ProductScreen'\r\nimport CartScreen from './screens/Customer/CartScreen'\r\nimport LoginScreen from './screens/Auth/LoginScreen'\r\nimport RegisterScreen from './screens/Auth/RegisterScreen'\r\nimport ProfileScreen from './screens/Auth/ProfileScreen'\r\nimport ShippingScreen from './screens/Customer/ShippingScreen'\r\nimport PaymentScreen from './screens/Customer/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/Customer/PlaceOrderScreen'\r\nimport OrderScreen from './screens/Customer/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/Product/ProductListScreen'\r\nimport ProductEditScreen from './screens/Product/ProductEditScreen'\r\nimport ProductAddScreen from './screens/Product/ProductAddScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\nimport BrandAddScreen from './screens/Brand/BrandAddScreen'\r\nimport BrandEditScreen from './screens/Brand/BrandEditScreen'\r\nimport BrandListScreen from './screens/Brand/BrandList'\r\nimport CategoryListScreen from './screens/Category/CategoryLIstScreen'\r\nimport CategoryAddScreen from './screens/Category/CategoryAddScreen'\r\nimport CategoryEditScreen from './screens/Category/CategoryEditScreen'\r\nimport CategoryScreen from './screens/Customer/Categoryscreen'\r\nimport CategoryProduct from './screens/Customer/CategoryProduct'\r\nimport AdminRoute from './components/Routes/AdminRoute'\r\nimport PrivateRoute from './components/Routes/PrivateRoute'\r\nimport SellerRoute from './components/Routes/SellerRoute'\r\nimport OrderScreenAdmin from './screens/Order/Orderadmin'\r\nimport OrderScreenSeller from './screens/Order/Orderseller'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n     \r\n      <main className='py-3'>\r\n        <Container>\r\n\r\n        \r\n            <Switch>\r\n          <Route path='/' component={HomeScreen} exact />\r\n          <Route path='/search/:keyword' component={HomeScreen} exact />\r\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\r\n          <Route\r\n            path='/search/:keyword/page/:pageNumber'\r\n            component={HomeScreen}\r\n            exact\r\n            />\r\n         \r\n          \r\n        <Route path='/brand' component={BrandScreen} exact/>\r\n        <Route path='/category' component={CategoryScreen} exact/>\r\n        <Route path='/category/:slug' component={CategoryProduct} />\r\n        <Route path='/brand/:slug' component={Brandproduct} exact />\r\n        \r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n          \r\n          <Route\r\n            path='/admin/productlist'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <SellerRoute  path='/admin/productlist/:pageNumber'  component={ProductListScreen}exact />\r\n          <SellerRoute path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n          <SellerRoute path='/admin/product/add' component={ProductAddScreen} />\r\n        \r\n          <AdminRoute  path='/admin/brandlist/'  component={BrandListScreen}exact />\r\n          <AdminRoute path='/admin/brand/:id/edit' component={BrandEditScreen} />\r\n          <AdminRoute path='/admin/brand/add' component={BrandAddScreen} />\r\n       \r\n          <AdminRoute  path='/admin/categorylist/'  component={CategoryListScreen}exact />\r\n          <AdminRoute path='/admin/category/:id/edit' component={CategoryEditScreen} />\r\n          <AdminRoute path='/admin/category/add' component={CategoryAddScreen} />\r\n             \r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n          <Route path='/seller/order/:id' component={OrderScreenSeller} />\r\n          <Route path='/admin/order/:id' component={OrderScreenAdmin} />\r\n          </Switch>\r\n         \r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n      \r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n   <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}